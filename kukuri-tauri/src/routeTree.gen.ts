/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WelcomeRouteImport } from './routes/welcome'
import { Route as TopicsRouteImport } from './routes/topics'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as SearchRouteImport } from './routes/search'
import { Route as ProfileSetupRouteImport } from './routes/profile-setup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TopicsTopicIdRouteImport } from './routes/topics.$topicId'

const WelcomeRoute = WelcomeRouteImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => rootRouteImport,
} as any)
const TopicsRoute = TopicsRouteImport.update({
  id: '/topics',
  path: '/topics',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const SearchRoute = SearchRouteImport.update({
  id: '/search',
  path: '/search',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileSetupRoute = ProfileSetupRouteImport.update({
  id: '/profile-setup',
  path: '/profile-setup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TopicsTopicIdRoute = TopicsTopicIdRouteImport.update({
  id: '/$topicId',
  path: '/$topicId',
  getParentRoute: () => TopicsRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/profile-setup': typeof ProfileSetupRoute
  '/search': typeof SearchRoute
  '/settings': typeof SettingsRoute
  '/topics': typeof TopicsRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/topics/$topicId': typeof TopicsTopicIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/profile-setup': typeof ProfileSetupRoute
  '/search': typeof SearchRoute
  '/settings': typeof SettingsRoute
  '/topics': typeof TopicsRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/topics/$topicId': typeof TopicsTopicIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/profile-setup': typeof ProfileSetupRoute
  '/search': typeof SearchRoute
  '/settings': typeof SettingsRoute
  '/topics': typeof TopicsRouteWithChildren
  '/welcome': typeof WelcomeRoute
  '/topics/$topicId': typeof TopicsTopicIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/profile-setup'
    | '/search'
    | '/settings'
    | '/topics'
    | '/welcome'
    | '/topics/$topicId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/profile-setup'
    | '/search'
    | '/settings'
    | '/topics'
    | '/welcome'
    | '/topics/$topicId'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/profile-setup'
    | '/search'
    | '/settings'
    | '/topics'
    | '/welcome'
    | '/topics/$topicId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  ProfileSetupRoute: typeof ProfileSetupRoute
  SearchRoute: typeof SearchRoute
  SettingsRoute: typeof SettingsRoute
  TopicsRoute: typeof TopicsRouteWithChildren
  WelcomeRoute: typeof WelcomeRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/welcome': {
      id: '/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof WelcomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/topics': {
      id: '/topics'
      path: '/topics'
      fullPath: '/topics'
      preLoaderRoute: typeof TopicsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile-setup': {
      id: '/profile-setup'
      path: '/profile-setup'
      fullPath: '/profile-setup'
      preLoaderRoute: typeof ProfileSetupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/topics/$topicId': {
      id: '/topics/$topicId'
      path: '/$topicId'
      fullPath: '/topics/$topicId'
      preLoaderRoute: typeof TopicsTopicIdRouteImport
      parentRoute: typeof TopicsRoute
    }
  }
}

interface TopicsRouteChildren {
  TopicsTopicIdRoute: typeof TopicsTopicIdRoute
}

const TopicsRouteChildren: TopicsRouteChildren = {
  TopicsTopicIdRoute: TopicsTopicIdRoute,
}

const TopicsRouteWithChildren =
  TopicsRoute._addFileChildren(TopicsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  ProfileSetupRoute: ProfileSetupRoute,
  SearchRoute: SearchRoute,
  SettingsRoute: SettingsRoute,
  TopicsRoute: TopicsRouteWithChildren,
  WelcomeRoute: WelcomeRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
