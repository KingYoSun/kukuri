services:
  # テスト実行サービス
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: kukuri-test-runner
    network_mode: host
    volumes:
      # ソースコードをマウント（開発時の変更を即座に反映）
      - ./kukuri-tauri/src:/app/kukuri-tauri/src:ro
      - ./kukuri-tauri/src-tauri/src:/app/kukuri-tauri/src-tauri/src:ro
      - ./kukuri-tauri/tests:/app/kukuri-tauri/tests:ro
      # テスト結果の出力用
      - ./test-results:/app/test-results
      # Cargoキャッシュの永続化
      - cargo-registry:/usr/local/cargo/registry
      - cargo-git:/usr/local/cargo/git
      - cargo-target:/app/kukuri-tauri/src-tauri/target
      # pnpmキャッシュの永続化
      - pnpm-store:/root/.local/share/pnpm/store
    environment:
      # Rust環境変数
      RUST_BACKTRACE: 1
      RUST_LOG: debug
      CARGO_HOME: /usr/local/cargo
      ENABLE_P2P_INTEGRATION: ${ENABLE_P2P_INTEGRATION:-0}
      KUKURI_FORCE_LOCALHOST_ADDRS: ${KUKURI_FORCE_LOCALHOST_ADDRS:-1}
      KUKURI_BOOTSTRAP_PEERS: ${KUKURI_BOOTSTRAP_PEERS:-}
      # Node.js環境変数
      NODE_ENV: test
      # CI環境を示す（一部のテストで必要）
      CI: "true"
    # host network used for UDP reachability between endpoints

  # 個別のRustテスト実行
  rust-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: kukuri-rust-test
    working_dir: /app/kukuri-tauri/src-tauri
    network_mode: host
    command: /bin/sh -c "cargo test --workspace --all-features -- --nocapture"
    volumes:
      - ./kukuri-tauri/src-tauri/src:/app/kukuri-tauri/src-tauri/src:ro
      - ./kukuri-tauri/src-tauri/Cargo.toml:/app/kukuri-tauri/src-tauri/Cargo.toml:ro
      - ./kukuri-tauri/src-tauri/Cargo.lock:/app/kukuri-tauri/src-tauri/Cargo.lock:ro
      - ./kukuri-tauri/src-tauri/build.rs:/app/kukuri-tauri/src-tauri/build.rs:ro
      - ./kukuri-tauri/src-tauri/tauri.conf.json:/app/kukuri-tauri/src-tauri/tauri.conf.json:ro
      - ./kukuri-tauri/src-tauri/migrations:/app/kukuri-tauri/src-tauri/migrations:ro
      - ./test-results:/app/test-results
      # Cargoキャッシュの永続化
      - cargo-registry:/usr/local/cargo/registry
      - cargo-git:/usr/local/cargo/git
      - cargo-target:/app/kukuri-tauri/src-tauri/target
    environment:
      RUST_BACKTRACE: full
      RUST_LOG: debug
      CARGO_HOME: /usr/local/cargo
      ENABLE_P2P_INTEGRATION: ${ENABLE_P2P_INTEGRATION:-0}
      KUKURI_FORCE_LOCALHOST_ADDRS: ${KUKURI_FORCE_LOCALHOST_ADDRS:-1}
      KUKURI_BOOTSTRAP_PEERS: ${KUKURI_BOOTSTRAP_PEERS:-}

  # 個別のTypeScriptテスト実行
  ts-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: kukuri-ts-test
    working_dir: /app/kukuri-tauri
    command: pnpm test
    volumes:
      - ./kukuri-tauri:/app/kukuri-tauri:ro
      - ./test-results:/app/test-results
      # pnpmキャッシュの永続化
      - pnpm-store:/root/.local/share/pnpm/store
    environment:
      NODE_ENV: test
      CI: "true"
    networks:
      - test-network

  # リントとフォーマットチェック
  lint-check:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: kukuri-lint-check
    working_dir: /app
    command: |
      bash -c "
        echo '=== Rust format check ===' &&
        cd kukuri-tauri/src-tauri &&
        cargo fmt -- --check &&
        echo '=== Rust clippy ===' &&
        cargo clippy --workspace --all-features -- -D warnings &&
        echo '=== TypeScript lint ===' &&
        cd /app/kukuri-tauri &&
        pnpm lint &&
        echo '=== TypeScript format check ===' &&
        pnpm format:check
      "
    volumes:
      - ./kukuri-tauri:/app/kukuri-tauri:ro
      # Cargoキャッシュの永続化（clippyのため）
      - cargo-registry:/usr/local/cargo/registry
      - cargo-git:/usr/local/cargo/git
      - cargo-target:/app/kukuri-tauri/src-tauri/target
    environment:
      CARGO_HOME: /usr/local/cargo
    networks:
      - test-network

# 名前付きボリューム（キャッシュの永続化）
volumes:
  cargo-registry:
    name: kukuri-cargo-registry
  cargo-git:
    name: kukuri-cargo-git
  cargo-target:
    name: kukuri-cargo-target
  pnpm-store:
    name: kukuri-pnpm-store

networks:
  test-network:
    driver: bridge
