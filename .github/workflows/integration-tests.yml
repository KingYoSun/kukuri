name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: './kukuri-tauri/src-tauri -> target'
        
    - name: Install dependencies
      working-directory: ./kukuri-tauri
      run: pnpm install
      
    - name: Run frontend tests
      working-directory: ./kukuri-tauri
      run: pnpm test:coverage
      
    - name: Run Rust tests
      working-directory: ./kukuri-tauri/src-tauri
      run: cargo test --all-features
      
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./kukuri-tauri/coverage/lcov.info
        flags: frontend
        
  integration-tests:
    name: Integration Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: './kukuri-tauri/src-tauri -> target'
        
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev
        
    - name: Install dependencies
      working-directory: ./kukuri-tauri
      run: pnpm install
      
    - name: Build application
      working-directory: ./kukuri-tauri
      run: pnpm tauri build --debug
      
    - name: Run integration tests
      working-directory: ./kukuri-tauri
      run: pnpm test:integration
      
    - name: Run Rust integration tests
      working-directory: ./kukuri-tauri/src-tauri
      run: cargo test --test '*' -- --test-threads=1
      
  e2e-tests:
    name: E2E Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: './kukuri-tauri/src-tauri -> target'
        
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev xvfb
        
    - name: Install Tauri Driver
      run: cargo install tauri-driver
      
    - name: Install dependencies
      working-directory: ./kukuri-tauri
      run: |
        pnpm install
        pnpm add -D @wdio/cli @wdio/local-runner @wdio/mocha-framework @wdio/spec-reporter webdriverio
        
    - name: Build application
      working-directory: ./kukuri-tauri
      run: pnpm tauri build --debug
      
    - name: Run E2E tests (Linux)
      if: matrix.os == 'ubuntu-latest'
      working-directory: ./kukuri-tauri
      run: xvfb-run -a pnpm test:e2e
      env:
        E2E_SCREENSHOT: true
        
    - name: Run E2E tests (Windows/macOS)
      if: matrix.os != 'ubuntu-latest'
      working-directory: ./kukuri-tauri
      run: pnpm test:e2e
      env:
        E2E_SCREENSHOT: true
        
    - name: Upload E2E test screenshots
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-screenshots-${{ matrix.os }}
        path: ./kukuri-tauri/tests/e2e/screenshots/
        
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
        
    - name: Install dependencies
      working-directory: ./kukuri-tauri
      run: pnpm install
      
    - name: Run ESLint
      working-directory: ./kukuri-tauri
      run: pnpm lint
      
    - name: Check TypeScript types
      working-directory: ./kukuri-tauri
      run: pnpm type-check
      
    - name: Check Rust formatting
      working-directory: ./kukuri-tauri/src-tauri
      run: cargo fmt -- --check
      
    - name: Run Clippy
      working-directory: ./kukuri-tauri/src-tauri
      run: cargo clippy -- -D warnings
      
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Install cargo-audit
      run: cargo install cargo-audit
      
    - name: Run npm audit
      working-directory: ./kukuri-tauri
      run: pnpm audit --production
      continue-on-error: true
      
    - name: Run cargo audit
      working-directory: ./kukuri-tauri/src-tauri
      run: cargo audit